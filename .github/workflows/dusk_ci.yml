on: [pull_request]

name: Continuous integration

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
      - uses: actions-rs/cargo@v1
        with:
          command: check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install latest nightly toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
      - run: rustup component add clippy
      - name: Run `cargo clippy`
        run: cargo clippy --release -- -D warnings

  test_nightly:
      name: Nightly tests std
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v2
        - uses: actions-rs/toolchain@v1
          with:
            profile: minimal
        - uses: actions-rs/cargo@v1
          with:
            command: test
            args: --release

  test_nightly_no_std:
      name: Nightly tests no_std
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v2
        - uses: actions-rs/toolchain@v1
          with:
            profile: minimal
        - uses: actions-rs/cargo@v1
          with:
            command: test
            args: --release --no-default-features

  test_nightly_serde:
      name: Nightly tests serde
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v2
        - uses: actions-rs/toolchain@v1
          with:
            profile: minimal
        - uses: actions-rs/cargo@v1
          with:
            command: test
            args: --release --features serde_req

  test_nightly_canon:
    name: Nightly tests canon
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
      - uses: actions-rs/cargo@v1
        with:
          command: test
          args: --release --features canon

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
      - run: rustup component add rustfmt
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
